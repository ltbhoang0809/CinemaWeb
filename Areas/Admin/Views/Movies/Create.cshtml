@model CinemaWeb.Models.movy

@{
    var currentAdmin = (CinemaWeb.Models.user)HttpContext.Current.Session["admin"];
}
@{ 
    ViewBag.Title = "Create";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link rel="icon" href="~/assets/images/logo/cinema-logo.png" type="image/png">
    <title>Thêm phim</title>
    <link rel="stylesheet" href="~/assets/font/themify-icons/themify-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" type="~/Admin/text/css" href="https://npmcdn.com/flatpickr/dist/themes/material_orange.css">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="~/Areas/Admin/assets/css/addMovie.css?v=1">
</head>

<body id="reportsPage">
    <div class="header">
        <div class="container-fluid p-4">
            <div class="row align-items-center">
                <div class="col-md-1">
                </div>
                <div class="col-md-2 px-4 py-1">
                    <a href="/Home" class="navbar-brand">
                        <img src="~/assets/images/logo/cinema-logo.png" alt="Ohayou Cinema" class="img-fluid">
                    </a>
                </div>

                <div class="col-md-6" style=" display: flex; justify-content: center; align-items: center;">
                    <ul class="list-gr-1 list-group list-group-horizontal">
                        <li class="list-group-item movie-area">
                            <a href="/Admin/AdminHome">
                                Trang chủ
                                <i class="ti-angle-down down-btn"></i>
                            </a>
                        </li>

                        <li class="list-group-item cinema-corner text-center">
                            Quản lí rạp chiếu
                            <i class="ti-angle-down down-btn"></i>
                            <ul class="sub-list-gr-1 list-group">
                                <li><a href="/Admin/Movie/AllMovie">Phim</a></li>
                                <li><a href="/Admin/Schedule/Index">Suất chiếu</a></li>
                            </ul>
                        </li>

                        <li class="list-group-item cinema-corner text-center">
                            Quản lí tài khoản
                            <i class="ti-angle-down down-btn"></i>
                            <ul class="sub-list-gr-1 list-group">
                                <li><a href="/Admin/Staff/StaffList">Nhân viên</a></li>
                                <li><a href="/Admin/User/UserList">Khách hàng</a></li>
                            </ul>
                        </li>

                        <li class="list-group-item movie-area text-center">
                            <a href="/Admin/Revenue/OveralRevenue">
                                Doanh thu
                                <i class="ti-angle-down down-btn"></i>
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="login-area col-md-3">
                    <div class="row">
                        <div class="col-auto">
                            <div class="show-login js-show-login">
                                <div class="account-wrapper">
                                    <img src="~/assets/images/subimg/account.png" alt="" class="img-fluid account-img">
                                    <ul class="list-group account-list">
                                        <li class="list-group-item">
                                            <a href="/User/UserHome/UserProfile">
                                                <i class="fa-solid fa-id-badge account-icon"></i>
                                                Tài Khoản
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="/Home/SignOut" class="js-logout">
                                                <i class="fa-solid fa-arrow-right-from-bracket account-icon"></i>
                                                Đăng Xuất
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto" style="display: flex; align-items: center;">
                            <div class="user_name  row1 " style="font-weight: 600; font-size: small;">
                                @currentAdmin.full_name
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="line-default"></div>

    <div class="container-fluid wrapper">
        <div class="container update-box" style="max-width: 1140px !important">
            <h2 style="text-align: center">NHẬP THÔNG TIN PHIM</h2>
            @using (Html.BeginForm("Create", "Movies", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="row tm-edit-product-row">
                    <div class="col-xl-6 col-lg-6 col-md-12">
                        <div class="subform-group">
                            <label for="email">Tên phim</label>
                            <div class="subform">
                                <i class="fa-solid fa-clapperboard sub-icon"></i>
                                @Html.TextBoxFor(model => model.title, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="subform-group">
                            <label for="email">Mô tả</label>
                            <div class="subform">
                                <i class="fa-solid fa-pen sub-icon"></i>
                                @Html.TextAreaFor(model => model.description, 6, 50, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="search-content-item">
                            <div class="date">
                                <label for="email">Thể loại</label>
                                @Html.DropDownList("type_id", null, htmlAttributes: new { @class = "btn dropdown-toggle choose-btn" })
                                <ul class="dropdown-menu list-option">
                                    @Html.ValidationMessageFor(model => model.type_id, "", new { @class = "text-danger" })
                                </ul>
                            </div>
                            <div class="date">
                                <label for="email">Quốc gia</label>
                                @Html.DropDownList("country_id", null, htmlAttributes: new { @class = "btn dropdown-toggle choose-btn" })
                                <ul class="dropdown-menu list-option">
                                    @Html.ValidationMessageFor(model => model.country_id, "", new { @class = "text-danger" })
                                </ul>
                            </div>
                        </div>
                        <div class="subform-group">
                            <label for="email">Thời lượng</label>
                            <div class="subform">
                                <i class="fa-solid fa-clapperboard sub-icon"></i>
                                @Html.EditorFor(model => model.duration_minutes, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.duration_minutes, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="search-content-item">
                                <div class="date">
                                    <label for="email">Thời lượng (phút)</label>
                                    <div class="dropdown">
                                        @Html.EditorFor(model => model.duration_minutes, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.duration_minutes, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                        <div class="search-content-item">
                            <div class="date">
                                <label for="release_date">Ngày công chiếu</label>
                                <div class="dropdown">
                                    <i class="far fa-calendar-alt sub-icon"></i>
                                    @Html.TextBoxFor(model => model.release_date, new { @class = "form-control datepicker" })
                                    @Html.ValidationMessageFor(model => model.release_date, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="date">
                                <label for="end_date">Ngày kết thúc</label>
                                <div class="dropdown">
                                    <i class="far fa-calendar-alt sub-icon"></i>
                                    @Html.TextBoxFor(model => model.end_date, new { @class = "form-control datepicker" })
                                    @Html.ValidationMessageFor(model => model.end_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="subform-group">
                            <label for="director_name">Đạo diễn</label>
                            <div class="subform">
                                <i class="fa-solid fa-video sub-icon"></i>
                                @Html.EditorFor(model => model.director_name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.director_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="subform-group">
                            <label for="actors">Diễn viên</label>
                            <div id="actors-container" class="subform">
                                <!-- Actors will be dynamically added here -->
                            </div>
                            <button type="button" id="add-actor-btn" class="btn btn-primary addBtn">+</button>
                        </div>

                        <div class="subform-group">
                            <label for="email">Trailer phim</label>
                            <div class="subform">
                                <i class="fa-solid fa-clapperboard sub-icon"></i>
                                @Html.TextBoxFor(model => model.url_trailer, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.url_trailer, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-6 col-lg-6 col-md-12 mx-auto mb-4">
                        <div class="mv-img">
                            <div class="upload-img">
                                <i class="fas">
                                    <img id="largeImagePreview" src="" alt="Hình ảnh ngang" class="img-fluid d-block mx-auto" />
                                    @Html.ValidationMessageFor(model => model.url_large_image, "", new { @class = "text-danger" })
                                </i>
                            </div>
                            <div class="custom-file mt-3 mb-3">
                                <input id="fileLargeImage" name="fileLargeImage" type="file" style="display:none;" onchange="previewImage(event, 'largeImagePreview')" />
                                <input type="button" class="btn btn-primary addBtn mx-auto" value="Ảnh ngang" onclick="document.getElementById('fileLargeImage').click();" />
                            </div>
                        </div>
                        <div class="mv-img">
                            <div class="upload-img">
                                <i class="fas">
                                    <img id="imagePreview" src="" alt="Hình ảnh dọc" class="img-fluid d-block mx-auto" />
                                    @Html.ValidationMessageFor(model => model.url_image, "", new { @class = "text-danger" })
                                </i>
                            </div>
                            <div class="custom-file mt-3 mb-3">
                                <input id="fileImage" name="fileImage" type="file" style="display:none;" onchange="previewImage(event, 'imagePreview')" />
                                <input type="button" class="btn btn-primary addBtn mx-auto" value="Ảnh dọc" onclick="document.getElementById('fileImage').click();" />
                            </div>
                        </div>
                    </div>

                </div>
                <div class="optionBtn">
                    <button type="submit" class="btn btn-primary addBtn btn-primary-custom">
                        @Html.ActionLink("Trở lại", "Index", null, new { @class = "btn-link-custom" })
                    </button>
                    <button type="submit" value="Create" class="btn btn-primary addBtn btn-primary-custom">
                        Thêm phim
                    </button>

                </div>
            }
        </div>
    </div>

    <style>
        .actor-input {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }

            .actor-input .form-control {
                flex-grow: 1;
            }

        .remove-actor {
            margin-left: 10px;
            cursor: pointer;
            color: #f58020;
        }

        .sub-icon {
            margin-right: 10px;
        }

        .btn-link-custom {
            color: white !important;
            text-decoration: none !important;
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        flatpickr(".datepicker", {
            dateFormat: "Y-m-d",
        });
        document.addEventListener("DOMContentLoaded", function () {
            var datePickers = document.querySelectorAll(".datepicker");
            datePickers.forEach(function (datePicker) {
                datePicker.removeAttribute("readonly");
            });
        });
    </script>
    <script>
        function previewImage(event, previewId) {
            var output = document.getElementById(previewId);
            var file = event.target.files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                output.src = "https://localhost:44323/uploads/" + file.name; // Đường dẫn tương đối của ảnh từ máy chủ
            };

            reader.readAsDataURL(file); // Đọc file và kích hoạt sự kiện onload
        }
        //function previewImage(event, previewId) {
        //    var reader = new FileReader();
        //    var output = document.getElementById(previewId);
        //    reader.onload = function (e) {
        //        output.src = "https://localhost:44323/uploads/" + file.name;
        //    }
        //    reader.readAsDataURL(file);
        //}
    </script>
    <script>
        document.getElementById("add-actor-btn").addEventListener("click", function () {
            var container = document.getElementById("actors-container");
            var newInput = document.createElement("div");
            newInput.className = "actor-input";
            newInput.innerHTML = `
            <i class="fa-solid fa-users sub-icon1"></i>
            <input type="text" name="ActorNames" class="form-control" placeholder="Nhập tên diễn viên">
            <i class="fa-solid fa-trash remove-actor" onclick="removeActor(this)"></i>
        `;
            container.appendChild(newInput);
        });

        function removeActor(element) {
            var actorInput = element.parentElement;
            actorInput.remove();
        }
    </script>

</body>
</html>
